trigger:
  - main

pool:
  name: Self-Hosted

steps:
  - task: PowerShell@2
    displayName: "Ensure Terraform is Installed (Windows)"
    condition: eq( variables['Agent.OS'], 'Windows_NT' )
    inputs:
      targetType: 'inline'
      script: |
        $terraform = Get-Command terraform -ErrorAction SilentlyContinue
        if ($null -eq $terraform) {
          Write-Host "Terraform not found. Installing..."
          Invoke-WebRequest -Uri "https://releases.hashicorp.com/terraform/1.6.0/terraform_1.6.0_windows_amd64.zip" -OutFile "terraform.zip"
          Expand-Archive terraform.zip -DestinationPath "C:\terraform"
          $env:Path += ";C:\terraform"
          [System.Environment]::SetEnvironmentVariable("Path", $env:Path, [System.EnvironmentVariableTarget]::Machine)
          Write-Host "Terraform installed successfully."
        } else {
          Write-Host "Terraform is already installed."
        }
        terraform -version

  - script: |
      echo "Current Directory:"
      cd
      echo "Listing all files:"
      dir /s /b
    displayName: "List Files in Directory (Debug Step)"

  - script: |
      dir /s /b
    workingDirectory: terraform
    displayName: "Verify Terraform Files Exist"

  - script: terraform init
    workingDirectory: terraform
    displayName: "Initialize Terraform"
  
  - script: terraform validate
    workingDirectory: terraform
    displayName: "Validate Terraform Code"
  
  - script: terraform plan -out=tfplan
    workingDirectory: terraform
    displayName: "Plan Terraform Changes"
  
  - script: terraform apply -auto-approve
    workingDirectory: terraform
    displayName: "Apply Terraform Changes"
